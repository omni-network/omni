version: '2.4'
networks:
  test:
    labels:
      e2e: true
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.186.73.0/24

services:
  node0:
    labels:
      e2e: true
    container_name: node0
    image: omniops/halo:main
    init: true
    ports:
    - 26656
    - 8584:26657
    - 6060
    volumes:
    - ./node0:/halo
    depends_on:
      omni_evm_0:
        condition: service_healthy
    networks:
      test:
        ipv4_address: 10.186.73.0

  # Initialises geth files and folder from provided genesis file.
  mock_rollup:
    labels:
      e2e: true
    container_name: mock_rollup
    image: ghcr.io/foundry-rs/foundry:latest
    entrypoint:
      - anvil
      - --host=0.0.0.0
      - --chain-id=99
      - --block-time=1
      - --silent
      
    ports:
      - 9000:8545
    networks:
      test:
        ipv4_address: 10.186.73.0
    
  # Initialises geth files and folder from provided genesis file.
  mock_l1:
    labels:
      e2e: true
    container_name: mock_l1
    image: ghcr.io/foundry-rs/foundry:latest
    entrypoint:
      - anvil
      - --host=0.0.0.0
      - --chain-id=1
      - --block-time=3600
      - --silent
      - --load-state=/anvil/state.json
    ports:
      - 9000:8545
    networks:
      test:
        ipv4_address: 10.186.73.0
    
    volumes:
      - path/to/anvil/state.json:/anvil/state.json
    

  # Use geth as the omni EVMs.
  # Initialises geth files and folder from provided genesis file.
  omni_evm_0-init:
    labels:
      e2e: true
    container_name: omni_evm_0-init
    image: "ethereum/client-go:v1.13.15"
    command: --state.scheme=path --datadir=/geth init /geth/genesis.json
    volumes:
      - ./omni_evm_0:/geth
    networks:
      test:

  omni_evm_0:
    labels:
      e2e: true
    container_name: omni_evm_0
    image: "ethereum/client-go:v1.13.15"
    command:
      - --config=/geth/config.toml
      # Flags not available via config.toml
      - --nat=extip:10.186.73.0
      - --pprof
      - --pprof.addr=0.0.0.0
      - --metrics
      
    ports:
      - 8551
      - 8000:8545
      - 30303
      - 8546
      - 6060
    depends_on:
      omni_evm_0-init:
        condition: service_completed_successfully
    healthcheck:
      test: "nc -z localhost 8545"
      interval: 1s
      retries: 30
    volumes:
      - ./omni_evm_0:/geth
    networks:
      test:
        ipv4_address: 10.186.73.0

  relayer:
    labels:
      e2e: true
    container_name: relayer
    image: omniops/relayer:main
    restart: unless-stopped # Restart on crash to mitigate startup race issues
    volumes:
      - ./relayer:/relayer
    networks:
      test:
        ipv4_address: 10.186.73.200

  monitor:
    labels:
      e2e: true
    container_name: monitor
    image: omniops/monitor:main
    restart: unless-stopped # Restart on crash to mitigate startup race issues
    volumes:
      - ./monitor:/monitor
    networks:
      test:
        ipv4_address: 10.186.73.201

  prometheus:
    labels:
      e2e: true
    container_name: prometheus
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --enable-feature=exemplar-storage
      - --enable-feature=agent
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      test:
        ipv4_address: 10.186.73.202

  explorer_indexer:
    labels:
      e2e: true
    container_name: explorer_indexer
    image: omniops/explorer-indexer:main
    restart: unless-stopped # Restart on crash to mitigate startup race issues
    volumes:
      - ./explorer_indexer:/explorer_indexer
    networks:
      test:
        ipv4_address: 10.186.73.203

  explorer_graphql:
    labels:
      e2e: true
    container_name: explorer_graphql
    image: omniops/explorer-graphql:main
    restart: unless-stopped # Restart on crash to mitigate startup race issues
    volumes:
      - ./explorer_graphql:/explorer_graphql
    networks:
      test:
        ipv4_address: 10.186.73.204
    ports:
        - 21335:8080

  explorer_ui:
    labels:
      e2e: true
    container_name: explorer_ui
    image: omniops/explorer-ui:main
    restart: unless-stopped # Restart on crash to mitigate startup race issues
    environment:
      GRAPHQL_URL: http://localhost:8080/graphql
    volumes:
      - ./explorer_ui:/explorer_ui
    networks:
      test:
        ipv4_address: 10.186.73.205
    ports:
        - 57017:3000

