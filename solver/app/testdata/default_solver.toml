# This is a TOML config file.
# For more information, see https://github.com/toml-lang/toml

# The version of the Halo binary that created or
# last modified the config file. Do not modify this.
version = "main"

# Omni network to participate in: mainnet, testnet, or devnet.
network = ""

#######################################################################
###                         Solver Options                          ###
#######################################################################

# Path to the ethereum private key used to for inbox and outbox request state transitions.
private-key = "solver.key"


# The address that the solver listens for API requests.
api-addr = ":26661"

# The address that the solver listens for metric scrape requests.
monitoring-addr = ":26660"

# The CoinGecko API key to use for fetching token prices.
coingecko-apikey = "secret"

#######################################################################
###                             X-Chain                             ###
#######################################################################

[xchain]

# Cross-chain EVM RPC endpoints to use for voting; only required for validators. One per supported EVM is required.
# It is strongly advised to operate fullnodes for each chain and NOT to use free public RPCs.
[xchain.evm-rpc-endpoints]
# ethereum = "http://my-ethreum-node:8545"
# optimism = "https://my-op-node.com"


#######################################################################
###                         Logging Options                         ###
#######################################################################

[log]
# Logging level. Note cometBFT internal logs are configured in config.yaml.
# Options are: debug, info, warn, error.
level = "info"

# Logging format. Options are: console, json.
format = "console"

# Logging color if console format is chosen. Options are: auto, force, disable.
color = "auto"

[tracing]
# Open Telemetry OTLP endpoint URL. See https://pkg.go.dev/go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp.
endpoint = "http://localhost:1234"

# Open Telemetry OTLP headers. See https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/setup/quickstart/go/.
headers = ""
