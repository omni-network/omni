run:
  timeout: 5m
  go: "1.21"
  skip-files:
    - ".*\\.pb\\.go$" # Ignore generated protobuf files
linters-settings:
  exhaustive:
    default-signifies-exhaustive: true
  forbidigo:
    forbid:
      - 'fmt\.Print.*(# Avoid debug logging)?'
      - 'fmt\.Errorf.*(# Prefer app/errors.Wrap)?'
  gci: # Auto-format imports
    sections:
      - standard                           # Go stdlib
      - prefix(github.com/omni-network)    # Omni
      - prefix(github.com/cometbft)        # CometBFT
      - prefix(github.com/ethereum)        # Go-Ethereum
      - default                            # All other imports not matched to another section type.
      - blank                              # Blank imports
    custom-order: true
  govet:
    enable-all: true
  importas:
    no-unaliased: true
    # TODO(corver): Add our own import aliases here
  misspell:
    locale: US
  nlreturn:
    block-size: 2
  nolintlint:
    require-explanation: true
    require-specific: true
  revive:
    enable-all-rules: true
    severity: warning
    rules:
      # Disabled revive rules
      - name: file-header # Doesn't support auto fix
        disabled: true
      - name: max-public-structs # Too strict
        disabled: true
      # Some configured revive rules
      - name: imports-blacklist
        arguments:
          - "errors" # Prefer ./lib/errors
          - "github.com/pkg/errors" # Prefer ./lib/errors
          - "github.com/gogo/protobuf/proto" # Prefer google.golang.org/protobuf
      - name: line-length-limit
        arguments:
          - 120
      - name: unhandled-error
        arguments:
         - 'fmt.Printf'
         - 'fmt.Println'
  staticcheck:
    checks:
     - "all"
  testpackage:
    skip-regexp: internal_test\.go # Allow internal tests
  wrapcheck:
    ignoreSigs:
      - github.com/omni-network/omni/

issues:
  fix: true
  exclude-rules:
    - path: '((.+)_test\.go|scripts/.+\.go)'
      linters:        # Relax linters for both tests/scripts (non-production code)
        - gosec       # Security not an issue here
        - revive      # Relax revive rules
        - wrapcheck   # Wrapping not required
        - exhaustruct # Exhaustive structs not a priority
    - path: 'scripts/.+\.go'
      linters:        # Relax linters for scripts only (non-production code)
        - forbidigo   # Allow debug printing
  exclude:
    - fieldalignment # Ignore "fieldalignment: struct with XXX pointer bytes could be YYY"
    - "shadow: declaration of \"err\" shadows declaration" # Relax govet
    - "ifElseChain: rewrite if-else to switch statement"   # IfElseChain actually preferred to switches
linters:
  enable-all: true
  disable:
    # Disable some linters
    - goerr113      # We do not religiously follow the Go 1.13 package level error convention
    - godox         # Allow TODOs
    - tagliatelle   # Too strict
    - varnamelen    # False positives
    - wsl           # Way to strict and opinionated
    - funlen        # Some functions will be long
    - depguard      # Dependency guard is for enterprise users

    # Disable deprecated/archived linters
    - deadcode
    - exhaustivestruct
    - golint
    - ifshort
    - interfacer
    - maligned
    - nosnakecase
    - scopelint
    - structcheck
    - varcheck
