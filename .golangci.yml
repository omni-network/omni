run:
  timeout: 5m
  go: "1.22"
  skip-files:
    - ".*\\.pb\\.go$" # Ignore generated protobuf files
  skip-dirs:
    - explorer/db/ent
linters-settings:
  exhaustive:
    default-signifies-exhaustive: true
  forbidigo:
    forbid:
      - 'fmt\.Print.*(# Avoid debug logging)?'
      - 'fmt\.Errorf.*(# Prefer lib/errors.Wrap)?'
      - 'prometheus\.New.*(# Prefer promauto)?'
  gci: # Auto-format imports
    sections:
      - standard                           # Go stdlib
      - prefix(github.com/omni-network)    # Omni
      - prefix(github.com/cometbft)        # CometBFT
      - prefix(github.com/ethereum)        # Go-Ethereum
      - default                            # All other imports not matched to another section type.
      - blank                              # Blank imports
    custom-order: true
  govet:
    enable-all: true
  importas:
    no-unaliased: true
    alias:
      - pkg: github.com/cometbft/cometbft/crypto/secp256k1
        alias: k1
    # TODO(corver): Add our own import aliases here
  misspell:
    locale: US
  nlreturn:
    block-size: 2
  nolintlint:
    require-explanation: true
    require-specific: true
  revive:
    enable-all-rules: true
    severity: warning
    ignore-generated-header: true
    rules:
      # Disabled revive rules
      - name: file-header # Doesn't support auto fix
        disabled: true
      - name: max-public-structs # Too strict
        disabled: true
      - name: banned-characters # Not applicable
        disabled: true
      - name: cognitive-complexity # False positives, address in code reviews
        disabled: true
      - name: function-length # False positives, address in code reviews
        disabled: true
      - name: function-result-limit # False positives, address in code reviews
        disabled: true
      - name: cyclomatic # False positives, address in code reviews
        disabled: true
      - name: argument-limit # False positives, address in code reviews
        disabled: true
      - name: line-length-limit # Requires us to cause indentation confusion: https://google.github.io/styleguide/go/decisions#indentation-confusion
        disabled: true
      # Some configured revive rules
      - name: imports-blacklist
        arguments:
          - "log"                                # Prefer ./lib/log
          - "errors"                             # Prefer ./lib/errors
          - "github.com/pkg/errors"              # Prefer ./lib/errors
          - "github.com/gogo/protobuf/proto"     # Prefer google.golang.org/protobuf
          - "github.com/stretchr/testify/assert" # Prefer github.com/stretchr/testify/require
          - "golang.org/x/exp/slices"            # Prefer slices
      - name: unhandled-error
        arguments:
         - 'fmt.Printf'
         - 'fmt.Println'
  staticcheck:
    checks:
     - "all"
  testpackage:
    skip-regexp: internal_test\.go # Allow internal tests
  wrapcheck:
    ignoreSigs:
      - github.com/omni-network/omni/

issues:
  fix: true
  exclude-rules:
    - path: 'metrics.go'
      linters:
        - gochecknoglobals # Promauto metrics are global variables
    - path: '(.*)(test|scripts)(.*)'
      linters:        # Relax linters for both tests/scripts (non-production code)
        - gosec       # Security not an issue here
        - revive      # Relax revive rules
        - wrapcheck   # Wrapping not required
        - gocognit    # Cognitive complexity not an issue here
        - prealloc    # Prealloc not an issue here
        - perfsprint  # Performance not an issue here
    - path: 'scripts/.+\.go'
      linters:        # Relax linters for scripts only (non-production code)
        - forbidigo   # Allow debug printing
  exclude:
    - add-constant         # Ignore "add-constant: avoid magic numbers like" since it is too strict
    - fieldalignment # Ignore "fieldalignment: struct with XXX pointer bytes could be YYY"
    - "shadow: declaration of" # Relax govet
    - "shadows an import name" # Relax revive
    - "ifElseChain: rewrite if-else to switch statement"   # IfElseChain actually preferred to switches
    - "nested-structs: no nested structs are allowed"      # Relax revive

    # Loop variable issues have been fixed in Go 1.22, so can be ignored
    - "G601: Implicit memory aliasing in for loop"
    - "loopclosure: loop variable"
    - "Range statement for test"
    - "range-val-address: suspicious assignment of"
    - "exporting a pointer for the loop variable snapshot"

linters:
  enable-all: true
  disable:
    # Disable some linters (alphabetical order)
    - cyclop               # False positives, address in code reviews
    - depguard             # Dependency guard is for enterprise users
    - exhaustruct          # Exhaustive structs results in super verbose go code
    - funlen               # Some functions will be long
    - goerr113             # We do not religiously follow the Go 1.13 package level error convention
    - godox                # Allow TODOs
    - goimports            # Handled by gci
    - gofumpt              # Not compatible with gci, see https://github.com/golangci/golangci-lint/issues/1490.
    - gomnd                # Too many false positives
    - gomoddirectives      # We have a replace directive
    - ireturn              # Too many false positives
    - tagliatelle          # Too strict
    - varnamelen           # False positives
    - wsl                  # Way to strict and opinionated
    - lll                  # Disable rigid line length limit

    # Disable deprecated/archived linters (alphabetical order)
    - deadcode
    - exhaustivestruct
    - golint
    - ifshort
    - interfacer
    - maligned
    - nosnakecase
    - scopelint
    - structcheck
    - varcheck
