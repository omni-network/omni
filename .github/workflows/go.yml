name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]
  merge_group:
    types: [checks_requested]



jobs:
  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Go mod tidy checker
        id: gomodtidy
        uses: ./.github/actions/gomodtidy

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          cache: true
          go-version-file: go.mod
      - name: Build
        run: make build
      - name: Test with race detector (Ubuntu and MacOS)
        run: make test-race
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Go 1.21
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.5'
          id: go
          cache: false
          go-version-file: go.mod
      - name: GolangCI-Lint
        uses: golangci/golangci-lint-action@v3
        with:
          skip-cache: false
          version: v1.55.2
          args: --config=.golangci.yml --out-${NO_FUTURE}format colored-line-number
      - name: go mod tidy check
        uses: katexochen/go-tidy-check@v2

  gosec:
    name: Gosec scan
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go 1.21
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.5'
      - name: Run Gosec Security Scanner
        run: | # https://github.com/securego/gosec/issues/469
          export PATH=$PATH:$(go env GOPATH)/bin
          go install github.com/securego/gosec/v2/cmd/gosec@v2.15.0
          gosec -exclude-generated  ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: '1.21.5'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: go build -v ./...

# TODO: enable this later
#  coverage:
#    name: Coverage Report
#    if: github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Go
#        uses: actions/setup-go@v3
#        with:
#          cache: false
#          go-version-file: go.mod
#      - name: Cache Go Modules
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.cache/go-build
#            ~/go/pkg/mod
#          key: ${{ runner.os }}-go-coverage-${{ hashFiles('**/go.sum') }}
#      - name: Test with code coverage
#        run: make cover=1 test
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#          fail_ci_if_error: true
#          files: ./cover.out