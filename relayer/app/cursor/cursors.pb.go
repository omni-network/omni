// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: relayer/app/cursor/cursors.proto

package cursor

import (
	_ "cosmossdk.io/api/cosmos/orm/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cursor struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	SrcChainId           uint64                 `protobuf:"varint,1,opt,name=src_chain_id,json=srcChainId,proto3" json:"src_chain_id,omitempty"`                                                                                                            // Chain ID as per https://chainlist.org
	DstChainId           uint64                 `protobuf:"varint,2,opt,name=dst_chain_id,json=dstChainId,proto3" json:"dst_chain_id,omitempty"`                                                                                                            // Chain ID as per https://chainlist.org
	ConfLevel            uint32                 `protobuf:"varint,3,opt,name=conf_level,json=confLevel,proto3" json:"conf_level,omitempty"`                                                                                                                 // Confirmation level of the cross-chain block
	AttestOffset         uint64                 `protobuf:"varint,4,opt,name=attest_offset,json=attestOffset,proto3" json:"attest_offset,omitempty"`                                                                                                        // Offset of the cross-chain block
	Confirmed            bool                   `protobuf:"varint,5,opt,name=confirmed,proto3" json:"confirmed,omitempty"`                                                                                                                                  // Is the cursor confirmed
	StreamOffsetsByShard map[uint64]uint64      `protobuf:"bytes,6,rep,name=stream_offsets_by_shard,json=streamOffsetsByShard,proto3" json:"stream_offsets_by_shard,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // Highest XMsg StreamOffset by ShardID
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Cursor) Reset() {
	*x = Cursor{}
	mi := &file_relayer_app_cursor_cursors_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cursor) ProtoMessage() {}

func (x *Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_app_cursor_cursors_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cursor.ProtoReflect.Descriptor instead.
func (*Cursor) Descriptor() ([]byte, []int) {
	return file_relayer_app_cursor_cursors_proto_rawDescGZIP(), []int{0}
}

func (x *Cursor) GetSrcChainId() uint64 {
	if x != nil {
		return x.SrcChainId
	}
	return 0
}

func (x *Cursor) GetDstChainId() uint64 {
	if x != nil {
		return x.DstChainId
	}
	return 0
}

func (x *Cursor) GetConfLevel() uint32 {
	if x != nil {
		return x.ConfLevel
	}
	return 0
}

func (x *Cursor) GetAttestOffset() uint64 {
	if x != nil {
		return x.AttestOffset
	}
	return 0
}

func (x *Cursor) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *Cursor) GetStreamOffsetsByShard() map[uint64]uint64 {
	if x != nil {
		return x.StreamOffsetsByShard
	}
	return nil
}

var File_relayer_app_cursor_cursors_proto protoreflect.FileDescriptor

const file_relayer_app_cursor_cursors_proto_rawDesc = "" +
	"\n" +
	" relayer/app/cursor/cursors.proto\x12\x12relayer.app.cursor\x1a\x17cosmos/orm/v1/orm.proto\"\xa4\x03\n" +
	"\x06Cursor\x12 \n" +
	"\fsrc_chain_id\x18\x01 \x01(\x04R\n" +
	"srcChainId\x12 \n" +
	"\fdst_chain_id\x18\x02 \x01(\x04R\n" +
	"dstChainId\x12\x1d\n" +
	"\n" +
	"conf_level\x18\x03 \x01(\rR\tconfLevel\x12#\n" +
	"\rattest_offset\x18\x04 \x01(\x04R\fattestOffset\x12\x1c\n" +
	"\tconfirmed\x18\x05 \x01(\bR\tconfirmed\x12k\n" +
	"\x17stream_offsets_by_shard\x18\x06 \x03(\v24.relayer.app.cursor.Cursor.StreamOffsetsByShardEntryR\x14streamOffsetsByShard\x1aG\n" +
	"\x19StreamOffsetsByShardEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01:>\xf2\x9eÓŽ\x038\n" +
	"4\n" +
	"2src_chain_id,conf_level,dst_chain_id,attest_offset\x18\x01B\xc1\x01\n" +
	"\x16com.relayer.app.cursorB\fCursorsProtoP\x01Z/github.com/omni-network/omni/relayer/app/cursor\xa2\x02\x03RAC\xaa\x02\x12Relayer.App.Cursor\xca\x02\x12Relayer\\App\\Cursor\xe2\x02\x1eRelayer\\App\\Cursor\\GPBMetadata\xea\x02\x14Relayer::App::Cursorb\x06proto3"

var (
	file_relayer_app_cursor_cursors_proto_rawDescOnce sync.Once
	file_relayer_app_cursor_cursors_proto_rawDescData []byte
)

func file_relayer_app_cursor_cursors_proto_rawDescGZIP() []byte {
	file_relayer_app_cursor_cursors_proto_rawDescOnce.Do(func() {
		file_relayer_app_cursor_cursors_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_relayer_app_cursor_cursors_proto_rawDesc), len(file_relayer_app_cursor_cursors_proto_rawDesc)))
	})
	return file_relayer_app_cursor_cursors_proto_rawDescData
}

var file_relayer_app_cursor_cursors_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_relayer_app_cursor_cursors_proto_goTypes = []any{
	(*Cursor)(nil), // 0: relayer.app.cursor.Cursor
	nil,            // 1: relayer.app.cursor.Cursor.StreamOffsetsByShardEntry
}
var file_relayer_app_cursor_cursors_proto_depIdxs = []int32{
	1, // 0: relayer.app.cursor.Cursor.stream_offsets_by_shard:type_name -> relayer.app.cursor.Cursor.StreamOffsetsByShardEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_relayer_app_cursor_cursors_proto_init() }
func file_relayer_app_cursor_cursors_proto_init() {
	if File_relayer_app_cursor_cursors_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_relayer_app_cursor_cursors_proto_rawDesc), len(file_relayer_app_cursor_cursors_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_relayer_app_cursor_cursors_proto_goTypes,
		DependencyIndexes: file_relayer_app_cursor_cursors_proto_depIdxs,
		MessageInfos:      file_relayer_app_cursor_cursors_proto_msgTypes,
	}.Build()
	File_relayer_app_cursor_cursors_proto = out.File
	file_relayer_app_cursor_cursors_proto_goTypes = nil
	file_relayer_app_cursor_cursors_proto_depIdxs = nil
}
