// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: relayer/app/cursor/cursors.proto

package cursor

import (
	_ "cosmossdk.io/api/cosmos/orm/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cursor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcChainId           uint64            `protobuf:"varint,1,opt,name=src_chain_id,json=srcChainId,proto3" json:"src_chain_id,omitempty"`                                                                                                                          // Chain ID as per https://chainlist.org
	DstChainId           uint64            `protobuf:"varint,2,opt,name=dst_chain_id,json=dstChainId,proto3" json:"dst_chain_id,omitempty"`                                                                                                                          // Chain ID as per https://chainlist.org
	ConfLevel            uint32            `protobuf:"varint,3,opt,name=conf_level,json=confLevel,proto3" json:"conf_level,omitempty"`                                                                                                                               // Confirmation level of the cross-chain block
	AttestOffset         uint64            `protobuf:"varint,4,opt,name=attest_offset,json=attestOffset,proto3" json:"attest_offset,omitempty"`                                                                                                                      // Offset of the cross-chain block
	Confirmed            bool              `protobuf:"varint,5,opt,name=confirmed,proto3" json:"confirmed,omitempty"`                                                                                                                                                // Is the cursor confirmed
	StreamOffsetsByShard map[uint64]uint64 `protobuf:"bytes,6,rep,name=stream_offsets_by_shard,json=streamOffsetsByShard,proto3" json:"stream_offsets_by_shard,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` // Highest XMsg StreamOffset by ShardID
}

func (x *Cursor) Reset() {
	*x = Cursor{}
	mi := &file_relayer_app_cursor_cursors_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cursor) ProtoMessage() {}

func (x *Cursor) ProtoReflect() protoreflect.Message {
	mi := &file_relayer_app_cursor_cursors_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cursor.ProtoReflect.Descriptor instead.
func (*Cursor) Descriptor() ([]byte, []int) {
	return file_relayer_app_cursor_cursors_proto_rawDescGZIP(), []int{0}
}

func (x *Cursor) GetSrcChainId() uint64 {
	if x != nil {
		return x.SrcChainId
	}
	return 0
}

func (x *Cursor) GetDstChainId() uint64 {
	if x != nil {
		return x.DstChainId
	}
	return 0
}

func (x *Cursor) GetConfLevel() uint32 {
	if x != nil {
		return x.ConfLevel
	}
	return 0
}

func (x *Cursor) GetAttestOffset() uint64 {
	if x != nil {
		return x.AttestOffset
	}
	return 0
}

func (x *Cursor) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *Cursor) GetStreamOffsetsByShard() map[uint64]uint64 {
	if x != nil {
		return x.StreamOffsetsByShard
	}
	return nil
}

var File_relayer_app_cursor_cursors_proto protoreflect.FileDescriptor

var file_relayer_app_cursor_cursors_proto_rawDesc = []byte{
	0x0a, 0x20, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x2f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6f,
	0x72, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa4, 0x03, 0x0a, 0x06, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x72,
	0x63, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x73, 0x72, 0x63, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x64, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x64, 0x73, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64,
	0x12, 0x6b, 0x0a, 0x17, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x64, 0x1a, 0x47, 0x0a,
	0x19, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79,
	0x53, 0x68, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x3e, 0xf2, 0x9e, 0xd3, 0x8e, 0x03, 0x38, 0x0a, 0x34,
	0x0a, 0x32, 0x73, 0x72, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x2c, 0x63,
	0x6f, 0x6e, 0x66, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, 0x64, 0x73, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x2c, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x42, 0xc1, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x42, 0x0c, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6d,
	0x6e, 0x69, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x2f,
	0x72, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0xa2, 0x02, 0x03, 0x52, 0x41, 0x43, 0xaa, 0x02, 0x12, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0xca, 0x02, 0x12,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x41, 0x70, 0x70, 0x5c, 0x43, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0xe2, 0x02, 0x1e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5c, 0x41, 0x70, 0x70,
	0x5c, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x3a, 0x3a, 0x41,
	0x70, 0x70, 0x3a, 0x3a, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_relayer_app_cursor_cursors_proto_rawDescOnce sync.Once
	file_relayer_app_cursor_cursors_proto_rawDescData = file_relayer_app_cursor_cursors_proto_rawDesc
)

func file_relayer_app_cursor_cursors_proto_rawDescGZIP() []byte {
	file_relayer_app_cursor_cursors_proto_rawDescOnce.Do(func() {
		file_relayer_app_cursor_cursors_proto_rawDescData = protoimpl.X.CompressGZIP(file_relayer_app_cursor_cursors_proto_rawDescData)
	})
	return file_relayer_app_cursor_cursors_proto_rawDescData
}

var file_relayer_app_cursor_cursors_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_relayer_app_cursor_cursors_proto_goTypes = []any{
	(*Cursor)(nil), // 0: relayer.app.cursor.Cursor
	nil,            // 1: relayer.app.cursor.Cursor.StreamOffsetsByShardEntry
}
var file_relayer_app_cursor_cursors_proto_depIdxs = []int32{
	1, // 0: relayer.app.cursor.Cursor.stream_offsets_by_shard:type_name -> relayer.app.cursor.Cursor.StreamOffsetsByShardEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_relayer_app_cursor_cursors_proto_init() }
func file_relayer_app_cursor_cursors_proto_init() {
	if File_relayer_app_cursor_cursors_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_relayer_app_cursor_cursors_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_relayer_app_cursor_cursors_proto_goTypes,
		DependencyIndexes: file_relayer_app_cursor_cursors_proto_depIdxs,
		MessageInfos:      file_relayer_app_cursor_cursors_proto_msgTypes,
	}.Build()
	File_relayer_app_cursor_cursors_proto = out.File
	file_relayer_app_cursor_cursors_proto_rawDesc = nil
	file_relayer_app_cursor_cursors_proto_goTypes = nil
	file_relayer_app_cursor_cursors_proto_depIdxs = nil
}
