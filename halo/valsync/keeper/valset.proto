syntax = "proto3";

package halo.valsync.keeper;

import "cosmos/orm/v1/orm.proto";

option go_package = "halo/valsync/keeper";

// ValidatorSet defines a set of consensus chain validators
message ValidatorSet {
  option (cosmos.orm.v1.table) = {
    id: 1;
    primary_key: { fields: "id", auto_increment: true }
  };

  uint64 id             = 1; // Auto-incremented ID
  uint64 created_height = 2; // Height this validator set was created at. This should be monotonically increasing along with id.
}

// Validator represents a single validator in a validator set.
message Validator {
  option (cosmos.orm.v1.table) = {
    id: 2;
    primary_key: { fields: "id", auto_increment: true }
    index: {id: 2, fields: "valset_id,address", unique: true} // Allow querying by ValidatorSet ID, also unique validator per set.
  };

  uint64 id        = 1; // Auto-incremented ID
  uint64 valset_id = 2; // ValidatorSet ID to which this validator belongs
  bytes  address   = 3; // Validator ethereum address; 20 bytes.
  uint64 power     = 4; // Voting power of the validator
}