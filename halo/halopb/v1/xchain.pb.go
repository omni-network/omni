// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: halo/halopb/v1/xchain.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BlockHeader uniquely identifies a cross chain block.
type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId uint64 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"` // Chain ID as per https://chainlist.org
	Height  uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`                  // Height of the block
	Hash    []byte `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`                       // Hash of the block
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_halopb_v1_xchain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_halo_halopb_v1_xchain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_halo_halopb_v1_xchain_proto_rawDescGZIP(), []int{0}
}

func (x *BlockHeader) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *BlockHeader) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockHeader) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// AggAttestation aggregates multiple attestation by a validator set of a cross-chain Block.
type AggAttestation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeader    *BlockHeader `protobuf:"bytes,1,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`             // BlockHeader identifies the cross-chain Block
	ValidatorSetId uint64       `protobuf:"varint,2,opt,name=validator_set_id,json=validatorSetId,proto3" json:"validator_set_id,omitempty"` // Unique identified of the validator set included in this aggregate.
	BlockRoot      []byte       `protobuf:"bytes,3,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`                   // Merkle root of the cross-chain Block
	Signatures     []*SigTuple  `protobuf:"bytes,4,rep,name=signatures,proto3" json:"signatures,omitempty"`                                  // Validator signatures and public keys
}

func (x *AggAttestation) Reset() {
	*x = AggAttestation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_halopb_v1_xchain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggAttestation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggAttestation) ProtoMessage() {}

func (x *AggAttestation) ProtoReflect() protoreflect.Message {
	mi := &file_halo_halopb_v1_xchain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggAttestation.ProtoReflect.Descriptor instead.
func (*AggAttestation) Descriptor() ([]byte, []int) {
	return file_halo_halopb_v1_xchain_proto_rawDescGZIP(), []int{1}
}

func (x *AggAttestation) GetBlockHeader() *BlockHeader {
	if x != nil {
		return x.BlockHeader
	}
	return nil
}

func (x *AggAttestation) GetValidatorSetId() uint64 {
	if x != nil {
		return x.ValidatorSetId
	}
	return 0
}

func (x *AggAttestation) GetBlockRoot() []byte {
	if x != nil {
		return x.BlockRoot
	}
	return nil
}

func (x *AggAttestation) GetSignatures() []*SigTuple {
	if x != nil {
		return x.Signatures
	}
	return nil
}

// SigTuple is a validator signature and public key.
type SigTuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorPubKey []byte `protobuf:"bytes,1,opt,name=validator_pub_key,json=validatorPubKey,proto3" json:"validator_pub_key,omitempty"` // Validator public key; 33 bytes compressed secp256k1.
	Signature       []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`                                      // Validator signature over XBlockRoot; Ethereum 65 bytes [R || S || V] format.
}

func (x *SigTuple) Reset() {
	*x = SigTuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_halo_halopb_v1_xchain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigTuple) ProtoMessage() {}

func (x *SigTuple) ProtoReflect() protoreflect.Message {
	mi := &file_halo_halopb_v1_xchain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigTuple.ProtoReflect.Descriptor instead.
func (*SigTuple) Descriptor() ([]byte, []int) {
	return file_halo_halopb_v1_xchain_proto_rawDescGZIP(), []int{2}
}

func (x *SigTuple) GetValidatorPubKey() []byte {
	if x != nil {
		return x.ValidatorPubKey
	}
	return nil
}

func (x *SigTuple) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_halo_halopb_v1_xchain_proto protoreflect.FileDescriptor

var file_halo_halopb_v1_xchain_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x68, 0x61, 0x6c, 0x6f, 0x2f, 0x68, 0x61, 0x6c, 0x6f, 0x70, 0x62, 0x2f, 0x76, 0x31,
	0x2f, 0x78, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x68,
	0x61, 0x6c, 0x6f, 0x2e, 0x68, 0x61, 0x6c, 0x6f, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x22, 0x54, 0x0a,
	0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x22, 0xd3, 0x01, 0x0a, 0x0e, 0x41, 0x67, 0x67, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68,
	0x61, 0x6c, 0x6f, 0x2e, 0x68, 0x61, 0x6c, 0x6f, 0x70, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x12,
	0x38, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x61, 0x6c, 0x6f, 0x2e, 0x68, 0x61, 0x6c, 0x6f, 0x70,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x52, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x08, 0x53, 0x69, 0x67,
	0x54, 0x75, 0x70, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42,
	0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6d,
	0x6e, 0x69, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6f, 0x6d, 0x6e, 0x69, 0x2f,
	0x68, 0x61, 0x6c, 0x6f, 0x2f, 0x68, 0x61, 0x6c, 0x6f, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_halo_halopb_v1_xchain_proto_rawDescOnce sync.Once
	file_halo_halopb_v1_xchain_proto_rawDescData = file_halo_halopb_v1_xchain_proto_rawDesc
)

func file_halo_halopb_v1_xchain_proto_rawDescGZIP() []byte {
	file_halo_halopb_v1_xchain_proto_rawDescOnce.Do(func() {
		file_halo_halopb_v1_xchain_proto_rawDescData = protoimpl.X.CompressGZIP(file_halo_halopb_v1_xchain_proto_rawDescData)
	})
	return file_halo_halopb_v1_xchain_proto_rawDescData
}

var file_halo_halopb_v1_xchain_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_halo_halopb_v1_xchain_proto_goTypes = []interface{}{
	(*BlockHeader)(nil),    // 0: halo.halopb.v1.BlockHeader
	(*AggAttestation)(nil), // 1: halo.halopb.v1.AggAttestation
	(*SigTuple)(nil),       // 2: halo.halopb.v1.SigTuple
}
var file_halo_halopb_v1_xchain_proto_depIdxs = []int32{
	0, // 0: halo.halopb.v1.AggAttestation.block_header:type_name -> halo.halopb.v1.BlockHeader
	2, // 1: halo.halopb.v1.AggAttestation.signatures:type_name -> halo.halopb.v1.SigTuple
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_halo_halopb_v1_xchain_proto_init() }
func file_halo_halopb_v1_xchain_proto_init() {
	if File_halo_halopb_v1_xchain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_halo_halopb_v1_xchain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_halopb_v1_xchain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggAttestation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_halo_halopb_v1_xchain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigTuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_halo_halopb_v1_xchain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_halo_halopb_v1_xchain_proto_goTypes,
		DependencyIndexes: file_halo_halopb_v1_xchain_proto_depIdxs,
		MessageInfos:      file_halo_halopb_v1_xchain_proto_msgTypes,
	}.Build()
	File_halo_halopb_v1_xchain_proto = out.File
	file_halo_halopb_v1_xchain_proto_rawDesc = nil
	file_halo_halopb_v1_xchain_proto_goTypes = nil
	file_halo_halopb_v1_xchain_proto_depIdxs = nil
}
